name: My First Workflow

on:
  push:
    branches: 
      - main

permissions: 
  contents: none
  
    
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: boolean
        required: true
    
jobs:
  generate-a-secret-output:
    runs-on: ubuntu-latest
    steps:
      - id: sets-a-secret
        name: Generate, mask, and output a secret
        run: |
          the_secret=$((RANDOM))
          echo "::add-mask::$the_secret"
          echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
      - name: Use that secret output (protected by a mask)
        run: |
          echo "the secret number is ${{ steps.sets-a-secret.outputs.secret-number }}"
      - run: echo '### Hello world! :rocket:' >> $GITHUB_STEP_SUMMARY
      - run: echo '### Love this feature! :medal_sports:' >> $GITHUB_STEP_SUMMARY
      - run: echo '<h1>Great feature!</h1>' >> $GITHUB_STEP_SUMMARY

  TryingPerl:       
    runs-on: ubuntu-latest
    steps:
      - shell: perl {0}
        run: print %ENV

  MyFirstJob:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12, 14, 16]
    
    steps:
      - run: echo "ðŸ‘‹ Hello World!"
      - name: Checkout
        uses: actions/checkout@v4.1.5
      - name: List files in repository
        run: |
          echo "The repository ${{github.repository}} contains the following files:"
          tree
      - name: Print matrix entry
        run: |
          echo "Node version is ${{ matrix.node_version }}"
      - name: Print the inputs
        run: |
          echo "Log level: ${{ inputs.logLevel }}"
          echo "Tags: ${{ inputs.tags }}"
          echo "Environment: ${{ inputs.environment }}"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        
      
